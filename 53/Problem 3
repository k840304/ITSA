#include<stdio.h>
int main(){
    int cases, sum, rotate[10], i;
    long long n, m;
    scanf("%d", &cases);
    while(cases--){
        scanf("%lld%lld", &n, &m);
        sum = 0;
        rotate[0] = (n / 1000000000 - m / 1000000000 > 0) ? (n / 1000000000 - m / 1000000000) : (m / 1000000000 - n / 1000000000);
        n %= 1000000000;
        m %= 1000000000;
        rotate[1] = (n / 100000000 - m / 100000000 > 0) ? (n / 100000000 - m / 100000000) : (m / 100000000 - n / 100000000);
        n %= 100000000;
        m %= 100000000;
        rotate[2] = (n / 10000000 - m / 10000000 > 0) ? (n / 10000000 - m / 10000000) : (m / 10000000 - n / 10000000);
        n %= 10000000;
        m %= 10000000;
        rotate[3] = (n / 1000000 - m / 1000000 > 0) ? (n / 1000000 - m / 1000000) : (m / 1000000 - n / 1000000);
        n %= 1000000;
        m %= 1000000;
        rotate[4] = (n / 100000 - m / 100000 > 0) ? (n / 100000 - m / 100000) : (m / 100000 - n / 100000);
        n %= 100000;
        m %= 100000;
        rotate[5] = (n / 10000 - m / 10000 > 0) ? (n / 10000 - m / 10000) : (m / 10000 - n / 10000);
        n %= 10000;
        m %= 10000;
        rotate[6] = (n / 1000 - m / 1000 > 0) ? (n / 1000 - m / 1000) : (m / 1000 - n / 1000);
        n %= 1000;
        m %= 1000;
        rotate[7] = (n / 100 - m / 100 > 0) ? (n / 100 - m / 100) : (m / 100 - n / 100);
        n %= 100;
        m %= 100;
        rotate[8] = (n / 10 - m / 10 > 0) ? (n / 10 - m / 10) : (m / 10 - n / 10);
        rotate[9] = (n % 10 - m % 10 > 0) ? (n % 10 - m % 10) : (m % 10 - n % 10);
        for(i = 0; i < 10; i++){
            if(rotate[i] <= 5){
                sum += rotate[i];
            }
            else{
                sum += 10 - rotate[i];
            }
        }
        printf("%d\n", sum);
    }
    return 0;
}
